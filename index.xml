<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alexander Makarov</title>
    <link>https://samdark.github.io/</link>
    <description>Recent content on Alexander Makarov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 08 May 2017 00:40:17 +0300</lastBuildDate>
    
	<atom:link href="https://samdark.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why am I getting dull images after processing RAW files?!</title>
      <link>https://samdark.github.io/blog/why-am-i-getting-dull-images-after-processing-raw-files/</link>
      <pubDate>Mon, 08 May 2017 00:40:17 +0300</pubDate>
      
      <guid>https://samdark.github.io/blog/why-am-i-getting-dull-images-after-processing-raw-files/</guid>
      <description>I&amp;rsquo;m not a pro photographer but love to travel with a camera so I&amp;rsquo;m making some pictures from time to time. Some time ago I&amp;rsquo;ve started shooting in RAW and post-processing it to JPEG-s at home. After some practice I&amp;rsquo;ve managed to get slightly better JPEG-s than camera was making automatically. Everything was well (except tons of unprocessed RAWs, of course) but after re-installing OS something went wrong. I was doing everything as before but resulting JPEGs were simply dull colored and greyish.</description>
    </item>
    
    <item>
      <title>Yii Q&amp;A 1</title>
      <link>https://samdark.github.io/blog/yii-qa-1/</link>
      <pubDate>Tue, 18 Apr 2017 12:58:47 +0300</pubDate>
      
      <guid>https://samdark.github.io/blog/yii-qa-1/</guid>
      <description>Some questions I&amp;rsquo;m answering are asked often so I decided to publish answers here. Feel free to ask more in comments.
 Can you clarify please who has what role in Yii 2 maintenance and development?
  @qiangxue, Qiang Xue — creator of Yii, see below @samdark, Alexander Makarov — everything @cebe, Carsten Brandt — everything @klimov-paul, Klimov Paul — everything. Focuses on code @silverfire, Dmitry Naumenko — everything. Temporarily busy with own projects @arogachev, Alexey Rogachev — everything.</description>
    </item>
    
    <item>
      <title>Are traits evil?</title>
      <link>https://samdark.github.io/blog/are-traits-evil/</link>
      <pubDate>Mon, 17 Apr 2017 13:49:29 +0300</pubDate>
      
      <guid>https://samdark.github.io/blog/are-traits-evil/</guid>
      <description>When I have started a Patreon campaign, I have promised to answer questions. First question came from Daniel Fly and is about PHP traits:
 What do you think about Traits in PHP? Do you think they are evil and should avoid using them? If using them what are some common pitfalls fx where not to use them? Maybe you got some bad or good experience?
 What are traits?</description>
    </item>
    
    <item>
      <title>Patrons</title>
      <link>https://samdark.github.io/patrons/</link>
      <pubDate>Wed, 29 Mar 2017 16:14:29 +0300</pubDate>
      
      <guid>https://samdark.github.io/patrons/</guid>
      <description>My OpenSource time is backed financially by Yii and PHP communities via Patreon.
Top backers  Brandon Kelly Craft CMS and Pixel &amp; Tonic    Tobias Munk Phundament    Lucas Bartholemy HumHub    Basil Suter LUYA    Timur Ruziev   Dragan Zivkovic   Paul Heisig   Ilya Pistol Nethammer    Serban Cristian   Daniel Fly   Evgeniy Denisenko   djeux   Ulisses Vaquero   Judd Bundy   Alexander Bondarev   Pavel Tetyaev   Sergey Senokossov   Maxim Smirnov   Ivan Filatov   James crittenden   John Wales   Vuong Minh   alexvil   Chris Smith   Anton Shelyganov   Petr Myazin Пятиминутка PHP    Scott Arciszewski Paragon Initiative Enterprises    Nikola Trifunović   Chris Weyland   Alexander Kozhevnikov dotPlant2 CMS    Justin Cherniak Pinfire labs    Rodolfo Carmona   Paweł Brzozowski   Big thank you to the ones backed me, listed and unlisted.</description>
    </item>
    
    <item>
      <title>bcrypt hash</title>
      <link>https://samdark.github.io/blog/bcrypt-hash/</link>
      <pubDate>Thu, 23 Mar 2017 11:41:26 +0300</pubDate>
      
      <guid>https://samdark.github.io/blog/bcrypt-hash/</guid>
      <description>bcrypt is a good way to deal with password authentication. In PHP it is available via crypt with blowfish algorithm or a shortcut password_hash function current PHP versions are providing.
Yii framework project templates are using bcrypt for handling passwords. Framework components are providing polyfills ensuring bcrypt is used correctly.
bcrypt produces a compound hash that looks like the following:
$2y$13$YUUgrko03UmNU/fe6gNcO.Hka4lrdRlkq0iJ5d4bv4fK.sKS.6jXu
The string is always 60 characters long.
 2y indicates algorithm.</description>
    </item>
    
    <item>
      <title>Yii 2.0 Logging and PSR-3</title>
      <link>https://samdark.github.io/blog/yii-2.0-logging-and-psr-3/</link>
      <pubDate>Thu, 09 Mar 2017 12:39:18 +0300</pubDate>
      
      <guid>https://samdark.github.io/blog/yii-2.0-logging-and-psr-3/</guid>
      <description>It is 2017 and major parts of PHP community are all talking about PSRs: PHP standard recommendations that aim is to make parts of frameworks reusable. The recommendation PSR-3 is about logging. Many logging libraries are following this recommendation, among which Monolog is the most widely used one.
There are three questions commonly asked about Yii 2.0 with regards to PSR-3:
 Why isn&amp;rsquo;t Yii 2.0 PSR-3 compatible? How do I use PSR-3 compatible logger in Yii 2.</description>
    </item>
    
    <item>
      <title>No Kipple Please</title>
      <link>https://samdark.github.io/blog/no-kipple-please/</link>
      <pubDate>Sun, 05 Mar 2017 21:52:28 +0300</pubDate>
      
      <guid>https://samdark.github.io/blog/no-kipple-please/</guid>
      <description>&amp;ldquo;Kipple is useless objects, like junk mail or match folders after you use the last match or gum wrappers or yesterday&amp;rsquo;s homeopape. When nobody&amp;rsquo;s around, kipple reproduces itself. For instance, if you go to bed leaving any kipple around your apartment, when you wake up the next morning there&amp;rsquo;s twice as much of it. It always gets more and more.&amp;rdquo;
&amp;hellip;
&amp;ldquo;There&amp;rsquo;s the First Law of Kipple,&amp;rdquo; he said. &amp;ldquo;Kipple drives out nonkipple.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://samdark.github.io/about/</link>
      <pubDate>Sun, 05 Mar 2017 16:11:58 +0530</pubDate>
      
      <guid>https://samdark.github.io/about/</guid>
      <description>I&amp;rsquo;m Alex, one of the core maintainers of Yii PHP framework for more than 7 years, its representative in PHP-FIG, active conference speaker and participant of various other OpenSource projects.
I am blogging in Russian since 2005 and recently decided that it is time to write in English as well.
Seeking for patronage I am seeking for patronage in order to work on Yii framework and other OpenSource software. Would really appreciate if you will support me.</description>
    </item>
    
    <item>
      <title>Finding Bug with Binary Search</title>
      <link>https://samdark.github.io/blog/finding-bug-with-binary-search/</link>
      <pubDate>Sat, 04 Mar 2017 21:52:28 +0300</pubDate>
      
      <guid>https://samdark.github.io/blog/finding-bug-with-binary-search/</guid>
      <description>Once there&amp;rsquo;s a way to reproduce the issue we need to find code which caused it. Sometimes we are totally stuck for day feeling more and more depressed and, in the end, unable to think clearly. Luckily, there&amp;rsquo;s a systematic approach to find bug even if you have no idea what caused it and even where to set a breakpoint for proper debugging. This approach is known as binary search.</description>
    </item>
    
    <item>
      <title>The History of Yii Framework</title>
      <link>https://samdark.github.io/blog/the-history-of-yii-framework/</link>
      <pubDate>Sat, 04 Mar 2017 21:52:28 +0300</pubDate>
      
      <guid>https://samdark.github.io/blog/the-history-of-yii-framework/</guid>
      <description>Yii is one of the long-living PHP frameworks out there that is constantly evolving with time as PHP is enhanced more and more. It&amp;rsquo;s interesting explore the history of Yii.
Prado In June 2004, Qiang Xue released the first version of PRADO framework. Prado was inspired by Apache Tapestry, Borland Delphi and Microsoft ASP.NET.
Roughly at the same time, Zend conducted a competition called &amp;ldquo;gophp5&amp;rdquo; to promote the newly released PHP 5.</description>
    </item>
    
  </channel>
</rss>